server.port=0
spring.application.name=users-ws
spring.devtools.restart.enabled=true

# additional config
gateway.ip=192.168.1.6
authorization.token.header.name = Authorization
authorization.token.header.prefix = Bearer


# spring cloud config 
spring.config.import=optional:configserver:http://localhost:8012

logging.level.com.jkngil.pos.users.data.AlbumsServiceClient = DEBUG
logging.file.name=users-ws.log

# actuator properties
management.endpoints.web.exposure.include=*
management.endpoint.beans.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=ALWAYS
management.health.circuitbreakers.enabled=true

# h2 configuration properties
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

# h2 database properties
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# postgres database properties
spring.datasource.url=jdbc:postgresql://localhost:5432/pos_app
spring.datasource.username=kevin
spring.datasource.password=Cortinpre26
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update

# resilience4j properties
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

# micrometer properties
management.tracing.sampling.probability=1
logging.pattern.level=%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]
logging.level.com.jkngil.pos.users.services.UserServiceImpl=DEBUG